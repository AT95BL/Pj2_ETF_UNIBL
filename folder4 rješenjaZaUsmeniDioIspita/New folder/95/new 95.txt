
import java.util.ArrayList; 
import java.util.List; 
import java.util.Random; 
import java.util.stream.Stream; 

public class E1 extends Thread { 
	static List<E1> threads = new ArrayList(); 
	static final Random rand = new Random(); 
	public E1 e; 
	static int c = 1; 
	int id; 
	public E1() { 
		this.id = rand.nextDouble() < 1.0 ? c++ : 0; 
		if (this.id % 3 == 0) { 
			this.setDaemon(true); 
		} 
		threads.add(this); 
		(new Thread(this)).run(); 
	} 
	public E1(E1 var1) { 
		if (var1 != null) { 
			this.e = var1; 
		} 
	} 
	public static void main(String[] var0) { 
		E1 var1 = new E1(); 
		Thread[] var2 = new Thread[]{new E1(), new E1(), new E1(), new E1(var1), new E1((E1)null)}; 
		System.out.println("Main start"); 
		int var3 = 0; 
		for(int var4 = 0; 
		var4 < var2.length; ++var4) {
			if (var2[var4] instanceof E1) { 
				E1 var5 = (E1)var2[var4]; 
				if (var5.e != null) { 
					var5.e.start(); 
				}
			System.out.println("Starting thread..."); 
			var2[var4].run(); ++var3; 
			} 
				if (var3 > 3) { 
				System.out.println("Starting all threads..."); 
				runAll(); 
				break; 
			}	 
		} 
		System.out.println("Main end"); 
	} 
	public void run() { 
		Stream.iterate(1, (var0) -> { return var0 + 1; }).limit(5L).forEach((var1) -> { 
						System.out.println("E1(" + this.id + "): " + var1); }); 
	} 
	public static void runAll() { 
		threads.stream().forEach((var0) -> { var0.start(); }); 
	} 
}